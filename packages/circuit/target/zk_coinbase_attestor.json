{"noir_version":"1.0.0-beta.6+e796dfd67726cbc28eb9991782533b211025928d","hash":"985884643917128439","abi":{"parameters":[{"name":"digest","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"calldata","type":{"kind":"array","length":36,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"user_sig","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"coinbase_sig","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"user_pubkey_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"user_pubkey_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"coinbase_pubkey_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"coinbase_pubkey_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+2dZZBc9RLF72QDBHe34MHnjuzMYNkQkmzc3XZmdyYbd3fgvZfn/h5O8ODuFjy4uwUP7q453Bk4pE7yZburSBVTFab5UWw1987tf3fvcE4siF4LY0FwbCyK8VZVfserxSosJlgzwaoEay7YOoKtK9h6grUQbH3BNhBsQ8E2EmxjwTYRbFPBNhNsc8G2EGxLwbYSbGvBthFsW8G2E2x7wXYQbEfBdhJsZ8F2EWxXwfYUbC/B9hZsH8FaCbavYPsJtr9gBwh2oGAHCXawYHHBQsESgiUFSwmWFqxasIxgWcFygh0i2KGCHSbY4YIdIVhrwWoEayPYkYK1FewowdoJ1l6wDoLVCtZRsE6CdRasi2BdBesmWHfBegjWU7BegvUWrI9gfQXrJ1h/wQYINlCwQYINFmyIYEMFGybYcMHqBMsLVhCsXrAGwYqClQQbIVijYCMFGyXYaMHGCDZWsHGCjRdsgmATBZsk2GTBpgg2VbBpgk0XbIZgMwWbJdhsweYINleweYLNF2yBYAsFO1qwYwQ7VrDfCfZ7wf4g2CLB/ijYnwT7s2B/Eeyvgv1NsL8L9g/B/inYvwT7t2D/Eey/gv1PsP8Ldpxgxwt2gmAnCnaSYCcLdopgpwq2WLDTBDtdsDMEO1OwswQ7W7BzBFsi2LmCnSfY+YJdINiFgl0k2MWCXSLYpYJdJtjlgl0h2JWCXSXY1YJdI9i1gl0n2PWC3SDYjYLdJNjNgi0V7BbBbhXsNsFuF+wOwe4U7C7Blgl2t2D3CHavYPcJdr9gDwj2oGAPCfawYI8I9qhgjwn2uGBPCPakYE8J9rRgzwj2rGDPCfa8YC8I9qJgywV7SbCXBXtFsFcFe02w1wV7Q7AVgr0p2FuCvS3YO4K9K9h7gr0v2AeCfSjYR4J9LNgngn0q2GeCfS7YF4J9KdhXgn0t2DeCfSvYd4J9Lxj+siqLCdZMsKoy41es/F5Tfo837RU2j/38s5Lx6lSqmEkUw2SYjydyhWw6nkoXqrNhNkxn0w2JbDJZzKaymVwhl4nnwlSyGJbSuWSxhFcu6ZnnOmZ5lkqeea5rlmd1tWee65nlmcl55tnCLM8G1+u5vlmeyYxnnhvYPUcJzzw3tKtLcc88NzLLM57yzHNjszxD1/q5iVme2bRnnpua5VnIeua5md3ns8Ezz83N8qyv98xzC7vnKPTMc0u7PsS1Lm1l9xy53vet7fol1+u5jd31dD03t7V7jlzz3M6uLrne9+3t6rzrc7TDWvIc7Wh331375J3M8ky5znE7251HRc88d7G776790q5219M1z5Z219O1X9rNLM+i6+dzd7s9Q94zzz3s8ix45rmn3X7J9XruZfccuc6be9tdT9fzfR+76+m6Z2hltwdzzXNfszzzrv3nfmZ5pl33yfsb5Fkq/zDPPA+w+3y6nu8HmuWZcO3nD7Krn67P0cF2ewbXuhS3+3y6nkehXf10rUsJu3nT9fcISbs9g2s/n7KrS65zXNruOXLNs9qufrp+nyFjd99d9zZZuz7ZtQ/J2f1e2zXPQ9aSfd2hdvO7a/08bC35fsjhdvs617p0hF2ert9jaW33vLtez5qY2c9yrUtt1pL9/JF255Hr57OtXf+5xvmoqbuBo8w+n2u+703Ns53dc5TwzLO9WZ65gmeeHczyzGY986w1yzPhej07muVZn/fMs5Pdc1TyzLOzWZ6Z0DPPLmZ5lho88+xqlmfRtX52s7vv9Z55djfLc81zXFPz7GH3+Ux55tnTLM+ka7/Uy+56xj3z7G3Xh7jWpT52z5Hrfe9r1y+5Xs9+ZnmmXc/N/nbPkWueA+zqkut9H2h3PV2fo0F219O1/xxslmfBdT4aYlfnk555DrW77659yDC76+ma53C7c9O1D6kzyzN0/Xzm7eb3jGeeBbs8qz3zrLfb27hezwa7uuQ6xxXtrqdrH1Kyu56u8/sIu723a56Ndv28a1830izPvOuedpTd/tN17hhttwdzPd/HmOXZ4NrPj7Wrn67P0Ti7vs61Lo23q5+u59EEu/rpWpcm2s2brvv5SXZ7MNd+frJdXXKd46bYPUeueU61q5+u3xOYZnffXfc20+3qvGsfMsNufnfNc6bdXOxal2bZ7Zdcn6PZdnnmPfOcY9fPu17PuXZ5uvbz8+zmd9f7Pt+uD8Gq6kd/E7zj+3AVHcZ2FLenuAPFtRR3pLgTxZ0p7kJxV4q7Udyd4h4U96S4F8W9Ke5DcV+K+1Hcn+IBFA9czb87iOLBFA+heCjFwygeTnEdxXmKCxTXU9xAcZHiEsUjKG6keCTFoygeTfEYisdSPI7i8RRPoHgixZMonkzxFIqnUjyN4ukUz1jNdZ65ms/bLIpnUzyH4rmruV/zKJ5PMevLs64868mzjvwiilk3nvXiWSee9eFZF5714FkHnvXfWfed9d5Z55313VnXnfXcWced9dtZt5312lmnnfXZWZed9dhZh30xxadRfDrFZ1DM+uqsq8566qyjvoRi1k1nvXTWSWd9dNZFZz101kFn/XPWPWe9c9Y5Z31z1jVnPXPWMWf9ctYtZ71y1ilnfXLWJWc9ctYhX0rxLRTfSvFtFAcUxyhuRnEVxeyfxb5Z7JfFPlktKGZfLPbDYh8s9r9i3yv2u2KfK/a3Yl8r9rNiHyv2r2LfKvarYp8q9qdiXyr2o2IfKvafYt8p9puq+EwtqNyA8qvytzXl93jTXiF+fuVnNbX/qNxjvLMmPWvRswY9a88vo5i15lljnrXlWVOeteRZQ56141kznrXiWSOeteFZE5614FkDnrXfWfOdtd5Z45213VnTnbXcWcOdtduXU/wSxS9T/ArFrMnOWuyswc7a6ysoZq111lhnbXXWVGctddZQZ+101kxnrXTWSGdtdNZEZy101kBn7XPWPGetc9Y4Z21z1jRnLXPWMGftcvzlpxpI8S80yilmTy724mIPLvbeqqWYvbbYY4u9tdhTi7202EOLvbPYM4u9stgji72x2BOLvbDYA4u9r9jzir2u2OOKva3Y04q9rNjDir2r6ijOU1yguJ5i9qRiLyr2oGLvqUaK2WuKPabYW4o9pdhLij2k2DuKPaPYK4o9otgbij2h2AuKPaDY+4k9n9jriT2e2NuJPZ3Yy4k9nNi7aQHFCyk+muJjKA4ojlH8W88QxZ49w8LKDSi/Kn9bU36PN+0V4udXftavWYenZWD1/xuu+ffv8aa9wt3M8oy7/n+7u5vlGbrqxuxhd9+TldqEV/PYL3NGLasq/3PULNSqSo1CTUItQg1C7UHNQa1BjUFtQU1BLUENQe1AzUCtQI1AbUBNQC1ADcCzj2cezzqe8ZYr/+Azg/uB/1b4z8JvFv6y8JNtFUR+sfCHhR8s/F/h9wp/V/i54qHDLx7wS1F8YHAz8At8fPkNXyzDL3nwxS34o8IPFf6n8DuFv2nr8rVtE0T+pG2DqNdBj4PeBj1NbRD1MOhd0LOgV0GPgt4EPQl6EfQg6D3Qc6DXQI+B3gI9BXoJ9BDoHdAzoFdAj4DeAD1BXRD1AHgocebjrMcZj7MdZ3pjEJ3hOLtxZuOsxhmNsxlnMs5inME4e3Hm4qzFGYuzFWcqzlKcoTg7cWbirMQZibMRZ+KCIDoDcfbhzMN+CHsh7IOwB1oURHsf7Huw58F+B3sd7HOwx8H+Bnsb7Guwp8F+BnsZ7GOwh8H+BXsX7FuwZ8F+BXsV7FOwR1kcRHsT7EuwJ8F+BHsR7EOwB1kSRHsP7Duw58B+A3sN7DOwx8D+AnsL7Cuwp8B+AnsJ7COwh8D+AXsH7BuwZ8B+AXsF7BOwR1gaRHsD7AuwJ8CshxkPsx1mumVBNMNhdsPMhlkNMxpmM8xkmMUwg2H2wsyFWQszFmYrzFSYpTBDYXbCzIRZCTMSZiPMRMuDaAbC7IOZB7MOZhzMNphpVgTRDIPZBTMLZhXMKJhNMJNgFsEMgtkDMwdmDcwYmC0wU2CWwAyB2QEzA2YFzAiYDTAT4OHHDIDev4rOQtQHePLA7wZeMvBpgQcK/EXg3QFfDHhOwM8BXgnwIYDGP/TzoU0P3XdoqkOvHFrg0NmGhjX0oaG9DF1jaAZDjxdaty1X/oFGK/RPoS0K3U5oYkJvElqO0EmEBiH0/aCdB106aL5BTw1aZRjYobEF/SoUOuguQdMIekHQ4oHODTRkoM8C7RPoikCzA3oYP2pNrPwDjQToD7Rdpefg1w9C/dJjwH0AAA==","debug_symbols":"tdbRiuIwFIDhd+m1FzlJTk46r7IsQ9U6FEqVjg4sMu++jf52xguXpTJXf23MR6gm9Fxt2/Xp7bUbdvv36uXXuVqPXd93b6/9ftMcu/0w3T1/rqrbx9fj2LbTrerb+DTr0IztcKxehlPfr6qPpj9dvvR+aIZLj804jbpV1Q7bqRO46/q2XH2uvma7x1NrL0yutZ6n6/18eTzfO5cAvJPwJfz3AiwwX5zIoxWEH1yBuDrfluDFP1rCvwTvdRZCWiIE8TchSlwiRG+zEN0SQcP8HDTWzwpqiwSTWcj+WaFe9BySizchiT4r+LBICPOvmWJ+VtD7/+Tv6VOz6ca7w6jymi5b3avRTOtrk6NCPQ00UqV4CS/hJTzDMzzDMzzDMzzDMzzDM7yMl/EyXsbLeBkv42W8nC8Hjc/1tbWjQj0NNFKliRrFq69ecI4K9TTQSJUmajRTPMETPMETPMETPMETPMETPD95WirU00AjVZqo0UzrawNewAt4AS/gBbyAF/ACXsCLeBEv4kW8iBfxIl7Ei3gRT/EUT/EUT/EUT/EUT/EUL+ElvISX8BJewkt4CS/hJTzDMzzDMzzDMzzDMzzDM7yMV/ZHKp08K528XFr2hysXZYP4clF2SCwXZYuUQ+SjGbtm3be8vuxOw+bb28zxz+E2cnvfOYz7Tbs9jW05bC5j0/HzFw==","file_map":{"50":{"source":"use std::ecdsa_secp256k1::verify_signature;\n\nglobal COINBASE_PUBKEY_X: [u8; 32] = [\n    110, 2, 155, 136, 43, 202, 15, 113,\n    253, 226, 124, 73, 244, 53, 240,\n    157, 69, 141, 81, 241, 61, 245, 141,\n    63, 184, 147, 52, 148, 64, 19, 199, 198\n];\n\nglobal COINBASE_PUBKEY_Y: [u8; 32] = [\n    39, 57, 45, 60, 108, 85, 171, 1,\n    112, 223, 37, 76, 109, 91, 178, 131,\n    212, 100, 46, 216, 65, 17, 184, 195,\n    43, 158, 154, 14, 0, 147, 58, 140\n];\n\nfn main(\n    digest: [u8; 32],\n\n    calldata: [u8; 36],               // attestation calldata\n    user_sig: [u8; 64],               // user's signature over digest\n    coinbase_sig: [u8; 64],           // signature from Coinbase attestor over digest\n\n    user_pubkey_x: [u8; 32],\n    user_pubkey_y: [u8; 32],\n\n    coinbase_pubkey_x: pub [u8; 32],  // public input for verification\n    coinbase_pubkey_y: pub [u8; 32],\n) {\n    // Step 1: verify Coinbase pubkey\n    assert(coinbase_pubkey_x == COINBASE_PUBKEY_X);\n    assert(coinbase_pubkey_y == COINBASE_PUBKEY_Y);\n\n    // Step 2: verify digest was signed by Coinbase attestor\n    let verified_cb = verify_signature(\n        coinbase_pubkey_x,\n        coinbase_pubkey_y,\n        coinbase_sig,\n        digest\n    );\n    assert(verified_cb);\n\n    // Step 3: verify digest was signed by user\n    let verified_user = verify_signature(\n        user_pubkey_x,\n        user_pubkey_y,\n        user_sig,\n        digest\n    );\n    assert(verified_user);\n\n    // Step 4: enforce function selector == `attestAccount(address)` -> 0x56feed5e\n    assert(calldata[0] == 0x56);\n    assert(calldata[1] == 0xfe);\n    assert(calldata[2] == 0xed);\n    assert(calldata[3] == 0x5e);\n}","path":"/Users/sooyounghyun/Desktop/dev/zk-coinbase-attestor/packages/circuit/src/main.nr"}},"names":["main"],"brillig_names":[]}